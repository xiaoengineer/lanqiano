C51 COMPILER V9.54   MAIN                                                                  01/20/2019 17:26:45 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC90C5xAD.H>
   2          typedef unsigned int u16;
   3          typedef unsigned char u8;
   4          
   5          u8 seg_ment[] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80,
   6                                                  0x90, 0x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E}; //定义段位
   7          u8 led_buff[] = {0xff, 0xff, 0xff, 0xff};//确保在上电的时候不亮
   8          
   9          u16 count, sec_flag;
  10          
  11          void close()
  12          {
  13   1              P2 = (P2 & 0X1F) | 0XA0;
  14   1              P0 = 0XAF;
  15   1              P2 = P2 & 0X1F;
  16   1      }
  17          
  18          void delay(u8 ms)
  19          {
  20   1              u8 i, j;
  21   1              for(i = ms; i > 0; i --)
  22   1                      for(j = 114; j > 0; j --);
  23   1      }
  24          
  25          void Timer0Init(void)           //100微秒@12.000MHz
  26          {
  27   1              AUXR &= 0x7F;           //定时器时钟12T模式
  28   1              TMOD &= 0xF0;           //设置定时器模式
  29   1              TMOD |= 0x01;           //设置定时器模式
  30   1              TL0 = 0x9C;             //设置定时初值
  31   1              TH0 = 0xFF;             //设置定时初值
  32   1              TF0 = 0;                //清除TF0标志
  33   1              TR0 = 1;                //定时器0开始计时
  34   1              EA =1;
  35   1              ET0 =1;
  36   1      }
  37          
  38          /*这个函数使用来显示的*/
  39          void led_scan()
  40          {
  41   1              static u8 index = 0; //这个静态变量使用来自动移位的
  42   1              P2 = (P2 & 0x1f) | 0xe0;
  43   1              P0 = 0XFF; //这个是消影
  44   1              P2 = P2 & 0X1F;
  45   1              delay(5);
  46   1              
  47   1              P2 = (P2 & 0X1F) | 0XC0;
  48   1              P0 = 0X80 >> index; //这个就实现了自动移位
  49   1              P2 = 0x1f;
  50   1              
  51   1              P2 = (P2 &0x1f) | 0xe0;
  52   1              P0 = led_buff[index];
  53   1              P2 = P2 & 0X1F;
  54   1              
C51 COMPILER V9.54   MAIN                                                                  01/20/2019 17:26:45 PAGE 2   

  55   1              if(index < 3)
  56   1                      index ++;
  57   1              else
  58   1                      index = 0;
  59   1      }
  60          
  61          /*这个函数是用来处理数据的，用了缓存的思想*/
  62          void show_number(u16 dat)
  63          {
  64   1              char i;
  65   1              u8 buf[4];
  66   1              
  67   1              for(i = 0; i < 4; i ++)
  68   1              {
  69   2                      buf[i] = dat % 10; 
  70   2                      dat = dat / 10;  //将数字是各个位分离出来并存入缓存
  71   2              }
  72   1              for(i = 3; i > 0; i --)
  73   1              {
  74   2                      if(buf[i] == 0) //如果临时缓存区里代表高位的没有数字
  75   2                              led_buff[i] = 0xff; //那么就为0xff,否则就可以正式填入数据
  76   2                      else            
  77   2                              break;
  78   2              }
  79   1              for(; i >= 0; i --)
  80   1              {
  81   2                      led_buff[i] = seg_ment[buf[i]];
  82   2              }
  83   1      }
  84          void main()
  85          {
  86   1              u16 sec;
  87   1              close();
  88   1              Timer0Init();
  89   1              while(1)
  90   1              {
  91   2                      if(sec_flag)
  92   2                      {
  93   3                              sec_flag = 0;
  94   3                              if(sec < 9999)
  95   3                              {
  96   4                                      sec ++;
  97   4                                      show_number(sec);
  98   4                                      led_scan();
  99   4                              }
 100   3                              else
 101   3                                      sec = 0;
 102   3                      }
 103   2      //show_number(1234);
 104   2      //led_scan();
 105   2              }
 106   1      }
 107          
 108          void T0_interrput() interrupt 1
 109          {
 110   1              TL0 = 0x9C;             //设置定时初值
 111   1              TH0 = 0xFF;     //设置定时初值
 112   1              count ++;
 113   1              if(count > 100)
 114   1              {
 115   2                      count = 0;
 116   2                      sec_flag = 1;
C51 COMPILER V9.54   MAIN                                                                  01/20/2019 17:26:45 PAGE 3   

 117   2              }
 118   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    316    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     25       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
