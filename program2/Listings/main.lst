C51 COMPILER V9.54   MAIN                                                                  01/20/2019 15:19:42 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC89C5xRC.H>
   2          typedef unsigned int u16;
   3          typedef unsigned char u8;
   4          
   5          u8 seg_ment[] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80,
   6                                                  0x90, 0x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E}; //定义段位
   7          u8 seg_bit[] = {0x80, 0x40, 0x20, 0x10}; //定义位选
   8          u16 count, sec_flag;
   9          
  10          void close()
  11          {
  12   1              P2 = (P2 & 0X1F) | 0XA0;
  13   1              P0 = 0XAF;
  14   1              P2 = P2 & 0X1F;
  15   1      }
  16          
  17          void delay(u8 ms)
  18          {
  19   1              u8 i, j;
  20   1              for(i = ms; i > 0; i --)
  21   1                      for(j = 114; j > 0; j --);
  22   1      }
  23          
  24          void led_show(u16 number)
  25          {
  26   1              /*这种处理数字的方法很简单，C语言课上老师应该都讲过*/
  27   1              u16 kilobit = number / 1000;
  28   1              u16 hundreds_place = number % 1000 / 100;
  29   1              u16 decade = number % 1000 % 100 / 10;
  30   1              u16 unit = number - (kilobit * 1000 + hundreds_place * 100 + decade * 10);
  31   1              
  32   1              /*下面是显示函数*/  
  33   1              /*显示个位*/
  34   1              P2 = (P2 & 0X1F) | 0XC0;
  35   1              P0 = seg_bit[0];
  36   1              P2 = P2 & 0X1f;
  37   1              
  38   1              P2 = (P2 & 0X1F) | 0XE0;
  39   1              P0 = seg_ment[unit];
  40   1              P2 = P2 & 0X1f;
  41   1              delay(10);
  42   1              
  43   1              /*显示十位*/
  44   1              P2 = (P2 & 0X1F) | 0XC0;
  45   1              P0 = seg_bit[1];
  46   1              P2 = P2 & 0X1f;
  47   1              
  48   1              P2 = (P2 & 0X1f) | 0XE0;
  49   1              P0 = seg_ment[decade];
  50   1              P2 = P2 & 0X1f;
  51   1              delay(10);
  52   1              
  53   1              /*显示百位*/
  54   1              P2 = (P2 & 0X1f) | 0XC0;
C51 COMPILER V9.54   MAIN                                                                  01/20/2019 15:19:42 PAGE 2   

  55   1              P0 = seg_bit[2];
  56   1              P2 = P2 & 0X1f;
  57   1              
  58   1              P2 = (P2 & 0X1F) | 0XE0;
  59   1              P0 = seg_ment[hundreds_place];
  60   1              P2 = P2 & 0x1f;
  61   1              delay(10);
  62   1              
  63   1              /*显示千位*/
  64   1              P2 = (P2 & 0X1F) | 0XC0;
  65   1              P0 = seg_bit[3];
  66   1              P2 = P2 & 0X1f;
  67   1              
  68   1              P2 = (P2 & 0X1F) | 0XE0;
  69   1              P0 = seg_ment[kilobit];
  70   1              P2 = P2 & 0X1f;
  71   1              delay(10);
  72   1      }
  73          
  74          void Timer0Init(void)           //100微秒@12.000MHz
  75          {
  76   1              AUXR &= 0x7F;           //定时器时钟12T模式
  77   1              TMOD &= 0xF0;           //设置定时器模式
  78   1              TMOD |= 0x01;           //设置定时器模式
  79   1              TL0 = 0x9C;             //设置定时初值
  80   1              TH0 = 0xFF;             //设置定时初值
  81   1              TF0 = 0;                //清除TF0标志
  82   1              TR0 = 1;                //定时器0开始计时
  83   1              EA = 1;
  84   1              ET0 =1;
  85   1      }
  86          
  87          void main()
  88          {
  89   1              u16 sec;
  90   1              close();
  91   1              Timer0Init();
  92   1              while(1)
  93   1              {
  94   2                      if(sec_flag)
  95   2                      {
  96   3                              sec_flag = 0;
  97   3                              if(sec < 9999)
  98   3                              {
  99   4                                      sec ++;
 100   4                                      led_show(sec);
 101   4                              }
 102   3                              else
 103   3                                      sec = 0;
 104   3                      }
 105   2              }
 106   1      }
 107          
 108          void interruptTimer0() interrupt 1
 109          {
 110   1              TL0 = 0x9C;             //设置定时初值
 111   1              TH0 = 0xFF;             //设置定时初值
 112   1              count ++;
 113   1              if(count > 100)
 114   1              {
 115   2                      count = 0;
 116   2                      sec_flag = 1;
C51 COMPILER V9.54   MAIN                                                                  01/20/2019 15:19:42 PAGE 3   

 117   2              }
 118   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    413    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     24       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
